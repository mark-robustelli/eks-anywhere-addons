apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: fusionauth
  namespace: fusionauth
spec:
  interval: 10m
  timeout: 5m

  # Make FA wait on Postgres
  dependsOn:
    - name: postgres
      namespace: fusionauth

  chart:
    spec:
      chart: fusionauth
      # version: 1.59.1  # optional pin
      sourceRef:
        kind: HelmRepository
        name: fusionauth
        namespace: flux-system
  targetNamespace: fusionauth
  values:
    env:
      - name: FA_API_KEY
        valueFrom:
          secretKeyRef:
            name: fusionauth-secrets
            key: FA_API_KEY
    # --- Database settings ---
    database:
      protocol: postgresql
      host: fusionauth-postgres-postgresql.fusionauth.svc.cluster.local
      port: 5432
      name: fusionauth
      existingSecret: fusionauth-secrets
      # Application user (least-priv)
      user: fauser
      password: changeMeSuperSecret2
      root:
        user: postgres

    app:
      runtimeMode: production
      silentMode: true

    # Use database search (no Elasticsearch)
    search:
      engine: database

    kickstart:
      enabled: true
      data:
        kickstart.json: |
         {
           "variables": {
             "defaultTenantId": "d7d09513-a3f5-401c-9685-34ab6c552453",
             "adminEmail": "admin@fusionauth.io",
             "adminPassword": "password".
             "apiKey": "#{env.FA_API_KEY}"
           },
           "apiKeys": [
             {
               "key": "#{apiKey}",
               "description": "Core API Key"
             }
           ],
           "requests": [
             {
               "method": "POST",
               "url": "/api/user/registration",
               "body": {
                 "user": {
                   "email": "#{adminEmail}",
                   "password": "#{adminPassword}"
                 },
                 "registration": {
                   "applicationId": "#{FUSIONAUTH_APPLICATION_ID}",
                   "roles": [
                     "admin"
                   ]
                 }
               }
             }
           ]
         }

    # Simple exposure for EKS-A Docker
    service:
      type: NodePort
      port: 9011

    ingress:
      enabled: false

